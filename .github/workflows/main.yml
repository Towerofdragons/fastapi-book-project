name: Python application

on:
  push:
    branches:
        - main
  
  pull_request:
    branches:  
        - main 
  workflow_dispatch:

permissions:
  contents: read

jobs:
  test:
    name: test

    runs-on: ubuntu-latest

    steps:
      - name: Checkout to repo
        uses: actions/checkout@v4
      
      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          
      # - name: Lint with flake8
      #   run: |
      #     # stop the build if there are Python syntax errors or undefined names
      #     flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
      #     # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
      #     flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Test with pytest
        run: |
          pytest  tests/test_books.py

  deploy:
    name: deploy
    needs: test  
    runs-on: ubuntu-latest

    steps:
      - name: Checkout to repo
        uses: actions/checkout@v4

      - name: Setup SSH Connection
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.ID_RSA }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.SERVER_IP }} >> ~/.ssh/known_hosts

      - name: Deploy Application
        run: |
          ssh ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }} <<EOF
            cd fastapi-book-project
            git pull
            docker-compose down
            docker-compose up --build -d
          EOF
